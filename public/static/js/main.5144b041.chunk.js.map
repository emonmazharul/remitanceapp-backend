{"version":3,"sources":["reportWebVitals.ts","remitance-app/context/context.tsx","remitance-app/utils/utils.ts","remitance-app/context/contextParent.tsx","remitance-app/component/signup.tsx","remitance-app/component/login.tsx","remitance-app/component/home.tsx","remitance-app/component/modal.tsx","remitance-app/component/dataSource.tsx","remitance-app/component/navigation.tsx","remitance-app/component/dataModel.tsx","remitance-app/component/addRemitanceHistory.tsx","remitance-app/component/invalidRoute.tsx","remitance-app/component/main.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","DataContext","React","createContext","isAuthenticated","totalAmount","originalAmount","currentAmount","user","fullname","undefined","email","role","remitance_history","loginHandler","Promise","resolve","signUpHandler","logoutHandler","add_remitance_history","formDataMaker","new_remitance_data","formData","FormData","append","receiptImage","originFileObj","keys","i","length","key","concat","numberConverter","credentials","govtIncentive","Number","forEach","loadUserData","Object","asyncToGenerator","regenerator_default","a","mark","_callee","setUserData","response","result","wrap","_context","prev","next","fetch","headers","Accept","Content-Type","sent","ok","console","log","abrupt","json","previousState","objectSpread","t0","stop","_x","apply","this","arguments","loadRemitanceData","_ref2","_callee2","post_remitance_history","_result","_context2","_x2","_ref3","_callee3","setLoginResult","navigate","_result2","_context3","method","redirect","body","JSON","stringify","loginResult","_x3","_x4","_x5","_x6","_ref4","_callee4","setSignUpResult","_result3","_context4","signUpResult","_x7","_x8","_x9","_x10","_ref5","_callee5","_context5","_x11","_x12","_x13","remitance_history_handler","_ref6","_callee6","setDataUploadError","errorResult","_context6","todayRate","todayAmount","message","type","_x14","_x15","_x16","_x17","ContextParent","children","useNavigate","_useState","useState","_useState2","slicedToArray","userData","_useState3","_useState4","_useState5","_useState6","setAmount","useEffect","item","totalTaka","loginHandlerWraper","signUpHandlerWraper","logoutHandlerWraper","remitance_history_handlerWraper","react_default","createElement","context","Provider","value","Title","Typography","Signup","_Form$useForm","Form","useForm","form","useContext","shouldButtonSpin","setLoadingState","onFinishHandler","Fragment","level","es_form","onFinish","layout","size","name","labelCol","span","wrapperCol","initialValues","remember","autoComplete","Item","label","rules","required","input","Password","es_alert","showIcon","es_button","htmlType","loading","Login","_useForm","values","login_Title","HomePage","lastSelectedComponent","localStorage","getItem","elemName","changeElemName","row","align","justify","style","height","col","margin","home_Title","onClick","new_selected_elem","setItem","signup","login","ModalOpener","id","isModalVisible","setIsModalVisible","modal","title","visible","onOk","onCancel","es_image","src","alt","columnsTwoInterface","dataIndex","render","_","component_modal","Date","toDateString","Navbar","_useContext","username","btnTexts","btnOneText","btnTwoText","width","backgroundColor","marginBottom","padding","color","fontSize","space","DataModel","_useContext$totalAmou","navigation","dataModel_Title","textAlign","marginTop","table","bordered","pagination","dataSource","columns","normFile","Array","isArray","fileList","AddRmitanceHistory","dataUploadError","display","addRemitanceHistory_Title","letterSpacing","min","validator","match","reject","Error","valuePropName","getValueFromEvent","extra","upload","customRequest","showUploadList","icon","UploadOutlined","InvalidRoute","es_result","status","subTitle","react_router_dom","to","RouteContainer","react_router","path","element","home","dataModel","addRemitanceHistory","invalidRoute","MainComponent","contextParent","main_RouteContainer","App","main","container","document","getElementById","ReactDOM","createRoot","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5144b041.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport {contextInterface} from '../types/type';\r\n\r\nconst DataContext = React.createContext<contextInterface>({\r\n  isAuthenticated:false,\r\n  totalAmount: {originalAmount:0,currentAmount:0},\r\n  user:{\r\n    fullname:undefined,\r\n    email:undefined,\r\n    role:undefined,\r\n  },\r\n  remitance_history:[],\r\n  loginHandler:() =>  { \r\n    return Promise.resolve();\r\n  },\r\n  signUpHandler:() => {\r\n    return Promise.resolve();\r\n  },\r\n  logoutHandler:() => Promise.resolve(),\r\n  add_remitance_history:() => Promise.resolve()\r\n});\r\n\r\nexport default DataContext; ","import React from 'react'\r\nimport { NavigateFunction } from 'react-router-dom';\r\nimport { contextDataInterface, LoginUser, RemitanceHistoryInterface, AlertType, SignUpUser } from \"../types/type\"\r\n\r\n\r\nexport function formDataMaker(new_remitance_data:RemitanceHistoryInterface):FormData {\r\n  const formData:FormData = new FormData();\r\n  formData.append('avatar', new_remitance_data.receiptImage[0].originFileObj);\r\n  const keys:Array<string> = ['pinNumber','totalPound','totalTaka','payingAgent','sendingDate','exchangeRate','govtIncentive'];\r\n  for(let i=0;i<keys.length;i++) {\r\n    const key = keys[i] as keyof RemitanceHistoryInterface; \r\n    formData.append(`${keys[i]}`, new_remitance_data[key]);\r\n  }\r\n  return formData;\r\n}\r\n\r\n\r\nexport function numberConverter(credentials:RemitanceHistoryInterface) {\r\n  credentials.govtIncentive = credentials.govtIncentive ? Number(credentials.govtIncentive) : 0;\r\n  type KeyType<T extends keyof RemitanceHistoryInterface> = T[] ;\r\n  const keys:KeyType<'totalPound' | 'totalTaka' | 'exchangeRate'> = ['totalPound','totalTaka','exchangeRate'];\r\n  keys.forEach(key=> {\r\n    credentials[key] = Number(credentials[key]);\r\n  });\r\n}\r\n\r\nexport const loadUserData = async (setUserData:React.Dispatch<React.SetStateAction<contextDataInterface>>):Promise<void> => {\r\n  try {\r\n    const response = await fetch('/user', {\r\n      credentials:'include',\r\n      headers : {\r\n        'Accept': \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\"\r\n      }\r\n    })\r\n    if(!response.ok) {\r\n      console.log('user is not loged in');\r\n      return;\r\n    }\r\n    const result:contextDataInterface = await response.json();\r\n    setUserData(previousState => ({\r\n      ...previousState,\r\n      ...result,\r\n    }))\r\n    // navigate('/history')\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport const loadRemitanceData = async (post_remitance_history:React.Dispatch<React.SetStateAction<RemitanceHistoryInterface[]>>):Promise<void> => {\r\n  try {\r\n    const response = await fetch( '/remitance/all_histories', {\r\n      credentials:'include',\r\n      headers : {\r\n        'Accept': \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\"\r\n      }\r\n    })\r\n    if(!response.ok) {\r\n      const result:RemitanceHistoryInterface[] = await response.json();\r\n      post_remitance_history(result);\r\n      return;\r\n    }\r\n    const result:RemitanceHistoryInterface[] = await response.json();\r\n    post_remitance_history(result);\r\n    // navigate('/history')\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nexport const loginHandler = async (\r\n  credentials:LoginUser,\r\n  setUserData:React.Dispatch<React.SetStateAction<contextDataInterface>>,\r\n  setLoginResult:React.Dispatch<React.SetStateAction<{message:string;type:AlertType}>>,\r\n  navigate:NavigateFunction\r\n\r\n):Promise<void> => {\r\n  try {\r\n    const response = await fetch( '/user/login', {\r\n      method:'POST',\r\n      credentials:'include',\r\n      redirect:'follow',\r\n      headers: {\r\n        'Accept': \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      body: JSON.stringify(credentials)\r\n    });\r\n    if(!response.ok) {\r\n      setUserData({\r\n        isAuthenticated:false,\r\n        user:{\r\n          fullname:undefined,\r\n          email:undefined,\r\n          role:undefined,\r\n        }\r\n      })\r\n      const result:{message:string;type:AlertType}= await response.json();\r\n      setLoginResult(loginResult => ({\r\n        ...loginResult,\r\n        ...result\r\n      }))\r\n      return;\r\n    }\r\n    const result:contextDataInterface = await response.json();\r\n    setUserData(previousState => ({\r\n      ...previousState,\r\n      ...result,\r\n    }) );\r\n    navigate('/history');\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n// sign up handler function\r\nexport const signUpHandler = async (\r\n    credentials:SignUpUser,\r\n    setUserData:React.Dispatch<React.SetStateAction<contextDataInterface>>,\r\n    setSignUpResult:React.Dispatch<React.SetStateAction<{message:string;type:AlertType}>>,\r\n    navigate:NavigateFunction\r\n  ):Promise<void> => {\r\n  try {\r\n    const response = await fetch( '/user/signup', {\r\n      method:'POST',\r\n      redirect:'follow',\r\n      headers: {\r\n        'Accept': \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n\r\n    if(!response.ok) {\r\n      const result:{message:string;type:AlertType}= await response.json();\r\n      setSignUpResult(signUpResult => ({\r\n        ...signUpResult,\r\n        ...result\r\n      }))\r\n      return;\r\n    }\r\n    const result:contextDataInterface = await response.json();\r\n    setUserData(previousState => ({\r\n      ...previousState,\r\n      ...result,\r\n    }) );\r\n    navigate('/history');\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport const logoutHandler = async (\r\n    setUserData:React.Dispatch<React.SetStateAction<contextDataInterface>>,\r\n    post_remitance_history:React.Dispatch<React.SetStateAction<RemitanceHistoryInterface[]>>,\r\n    navigate:NavigateFunction\r\n):Promise<void> => {\r\n  try {\r\n    await fetch( '/user/logout', {\r\n      method:'POST',\r\n      redirect:'follow',\r\n      headers: {\r\n        'Accept': \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      }\r\n    });\r\n    setUserData({\r\n      isAuthenticated:false,\r\n      user:{\r\n        fullname:undefined,\r\n        email:undefined,\r\n        role:undefined,\r\n      }\r\n    });\r\n    post_remitance_history([]);\r\n    navigate('/');\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport const remitance_history_handler = async (\r\n    remitance_history:RemitanceHistoryInterface[],\r\n    post_remitance_history:React.Dispatch<React.SetStateAction<RemitanceHistoryInterface[]>>,\r\n    new_remitance_data:RemitanceHistoryInterface,\r\n    setDataUploadError:React.Dispatch<React.SetStateAction<{message:string;type:AlertType}>>,\r\n  ):Promise<void> => {\r\n  try {\r\n    const response = await fetch( '/remitance/history', {\r\n      method:'POST',\r\n      credentials:'include',\r\n      body:formDataMaker(new_remitance_data)\r\n    });\r\n    if(!response.ok) {\r\n      const errorResult:{message:string,type:AlertType} = await response.json();\r\n      setDataUploadError(errorResult);\r\n      return;\r\n    }\r\n    const result:RemitanceHistoryInterface = await response.json();\r\n    post_remitance_history(remitance_history.concat({\r\n      ...result,\r\n      todayRate:0,\r\n      todayAmount:0\r\n    }));\r\n    const successResult:{message:string,type:AlertType} = {message:'Successfully added new remitance history',type:'success'}\r\n    setDataUploadError(successResult);\r\n  } catch (e) {\r\n    console.log(e);\r\n    const errorResult:{message:string,type:AlertType} = {message:'Could not add new data. Pleae try again!',type:'error'}\r\n    setDataUploadError(errorResult)\r\n  }\r\n}","import React,{useState,useEffect} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DataContext from \"./context\";\r\nimport {LoginUser,contextDataInterface, AlertType,SignUpUser,RemitanceHistoryInterface,TotalAmount} from \"../types/type\";\r\nimport {loadRemitanceData,loginHandler,loadUserData,logoutHandler,remitance_history_handler,signUpHandler } from \"../utils/utils\";\r\n\r\nconst ContextParent:React.FC<{children:React.ReactNode}> = ({children}) => {\r\n \r\n  const navigate = useNavigate();\r\n \r\n  const [userData,setUserData] = useState<contextDataInterface>({\r\n    isAuthenticated:false,\r\n    user:{\r\n      fullname:undefined,\r\n      email:undefined,\r\n      role:undefined,\r\n    }\r\n  });\r\n\r\n  const [remitance_history,post_remitance_history] = useState<RemitanceHistoryInterface[]>([]);\r\n  const [totalAmount,setAmount] = useState<TotalAmount>({originalAmount:0,currentAmount:0});\r\n  \r\n\r\n  useEffect(() => {\r\n    loadUserData(setUserData)\r\n    if(userData.isAuthenticated) {\r\n      loadRemitanceData(post_remitance_history);\r\n    }\r\n  }, [userData.isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    const result:TotalAmount = {originalAmount:0,currentAmount:0};\r\n    remitance_history.forEach(item => {\r\n      result.originalAmount+= item.totalTaka;\r\n      result.currentAmount += item.todayAmount || 0;\r\n    })\r\n    setAmount(previousState => ({\r\n      ...previousState,\r\n      ...result,\r\n    }));\r\n  }, [remitance_history])\r\n\r\n  //login handler function\r\n  const loginHandlerWraper = async (credentials:LoginUser,setLoginResult:React.Dispatch<React.SetStateAction<{message:string;type:AlertType}>>):Promise<void> => {\r\n    await loginHandler(credentials,setUserData,setLoginResult,navigate);\r\n  }\r\n\r\n  // sign up handler function\r\n  const signUpHandlerWraper = async (credentials:SignUpUser,setSignUpResult:React.Dispatch<React.SetStateAction<{message:string;type:AlertType}>>):Promise<void> => {\r\n    await signUpHandler(credentials,setUserData,setSignUpResult,navigate);\r\n  }\r\n  //logout handler function\r\n  const logoutHandlerWraper = async ():Promise<void> => {\r\n    await logoutHandler(setUserData,post_remitance_history,navigate);\r\n  }\r\n  //add remiance history\r\n  const remitance_history_handlerWraper = async (new_remitance_data:RemitanceHistoryInterface,setDataUploadError:React.Dispatch<React.SetStateAction<{message:string;type:AlertType}>>):Promise<void> => {\r\n    await remitance_history_handler(remitance_history,post_remitance_history,new_remitance_data,setDataUploadError);\r\n  }\r\n\r\n  return <DataContext.Provider value={{\r\n    ...userData,\r\n    totalAmount,\r\n    remitance_history,\r\n    loginHandler:loginHandlerWraper,\r\n    signUpHandler:signUpHandlerWraper,\r\n    logoutHandler:logoutHandlerWraper, \r\n    add_remitance_history:remitance_history_handlerWraper\r\n    }}>\r\n      {children}\r\n  </DataContext.Provider>\r\n}\r\n\r\nexport default  ContextParent;","import React, {useState,useContext }  from \"react\";\r\nimport {Button,Input,Typography,Form,Alert} from 'antd'\r\nimport { AlertType, contextInterface, SignUpUser } from \"../types/type\";\r\nimport DataContext from \"../context/context\";\r\n\r\nconst {Title} = Typography;\r\n\r\n\r\nconst Signup:React.FC = () => {\r\n  const [form] = Form.useForm();\r\n  const {signUpHandler}:contextInterface = useContext(DataContext);\r\n  const [signUpResult,setSignUpResult] = useState<{message:string;type:AlertType}>({message:'', type:undefined})\r\n  const [shouldButtonSpin,setLoadingState] = useState<boolean>(false);\r\n  \r\n  const onFinishHandler = async (credentials:SignUpUser):Promise<void> => {\r\n    setLoadingState(true);\r\n    await signUpHandler(credentials,setSignUpResult);\r\n    setLoadingState(false);\r\n  }\r\n\r\n  return <>\r\n    <Title level={1}> Signup  </Title>\r\n    <Form\r\n      form={form}\r\n      onFinish={onFinishHandler}  \r\n      layout=\"vertical\"\r\n      size=\"large\"\r\n      name=\"basic\"\r\n      labelCol={{span:8}}\r\n      wrapperCol={{span:20}}\r\n      initialValues={{remember:true}}\r\n      autoComplete=\"off\"\r\n    >\r\n      <Form.Item\r\n        label=\"Full Name\"\r\n        name=\"fullname\"\r\n        rules={[{required:true, message:'Please input your fullname'}]}\r\n      >\r\n        <Input/>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Email\"\r\n        name=\"email\"\r\n        rules={[{required:true, message:'Please input you email'}]}\r\n      >\r\n        <Input/>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[{required:true, message:'Please provide your password'}]}\r\n      >\r\n        <Input.Password/>\r\n      </Form.Item>\r\n\r\n      {\r\n        signUpResult.message && ( <Form.Item>\r\n          <Alert message={signUpResult.message} type={signUpResult.type} showIcon/>\r\n        </Form.Item>\r\n        )\r\n      }\r\n\r\n      <Form.Item\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={shouldButtonSpin}>\r\n          Sign Up\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  </>\r\n}\r\n\r\n\r\nexport default Signup;","import React, {useState,useContext}  from \"react\";\r\nimport {Button,Input,Typography,Form,Alert} from 'antd'\r\nimport { useForm } from \"antd/lib/form/Form\";\r\nimport DataContext from \"../context/context\";\r\nimport { AlertType, contextInterface, LoginUser } from \"../types/type\";\r\n\r\nconst {Title} = Typography;\r\n\r\n\r\nconst Login:React.FC = () => {\r\n  const [form] = useForm();\r\n  const {loginHandler}:contextInterface= useContext(DataContext);\r\n  const [loginResult,setLoginResult] = useState<{message:string;type:AlertType}>({message:'', type:undefined})\r\n  const [shouldButtonSpin,setLoadingState] = useState<boolean>(false);\r\n\r\n  const onFinish = async (values:LoginUser):Promise<void> => {\r\n    setLoadingState(true);\r\n    await loginHandler(values,setLoginResult);\r\n    setLoadingState(false);\r\n  }  \r\n\r\n  return <>\r\n    <Title level={1}> Login  </Title>\r\n    <Form \r\n      form={form}\r\n      onFinish={onFinish}\r\n      layout=\"vertical\"\r\n      size=\"large\"\r\n      name=\"basic\"\r\n      labelCol={{span:8}}\r\n      wrapperCol={{span:20}}\r\n      initialValues={{remember:true}}\r\n      autoComplete=\"off\"\r\n    >\r\n      <Form.Item\r\n        label=\"Email\"\r\n        name=\"email\"\r\n        rules={[{required:true, message:'Please input you email'}]}\r\n      >\r\n        <Input/>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[{required:true, message:'Please provide your password'}]}\r\n        \r\n      >\r\n        <Input.Password/>\r\n      </Form.Item>\r\n      {\r\n        loginResult.message && ( <Form.Item>\r\n          <Alert message={loginResult.message} type={loginResult.type} showIcon/>\r\n        </Form.Item>\r\n        )\r\n      }\r\n      <Form.Item\r\n        // wrapperCol={{offset: 16, span:8}}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={shouldButtonSpin}>\r\n          Login\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  </>\r\n}\r\n\r\nexport default Login;","import React, {useState,useContext, useEffect }  from \"react\";\r\nimport {Button,Typography,Col,Row} from 'antd';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DataContext from \"../context/context\";\r\nimport Signup from \"./signup\";\r\nimport Login from './login'\r\nimport { contextInterface } from \"../types/type\";\r\n\r\nconst {Title} = Typography;\r\n\r\nconst HomePage:React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const lastSelectedComponent:string = localStorage.getItem('view') || 'Sign Up';\r\n  const [elemName,changeElemName] = useState<string>(lastSelectedComponent);\r\n  const {isAuthenticated}:contextInterface =  useContext(DataContext);\r\n\r\n  useEffect(() => {\r\n    if(isAuthenticated) navigate('/history');\r\n  }, [isAuthenticated])\r\n\r\n  const clickHandler = () => {\r\n    const new_selected_elem:string = elemName === 'Sign Up' ? 'Login' : 'Sign Up';\r\n    localStorage.setItem('view', new_selected_elem);\r\n    changeElemName(new_selected_elem);\r\n  }\r\n  return <Row align=\"middle\" justify=\"space-around\" style={{height:'80vh'}}>\r\n    <Col span={6} style={{margin:'0 auto'}}>\r\n      <Title level={1}>WELCOME TO THE REMITANCE TRACKER</Title>\r\n      <Button type=\"primary\" onClick={clickHandler}>\r\n        {/* things goes down reverse thats whyt showLoginPage false show login text in login */}\r\n        {elemName === 'Sign Up' ? 'Login' : 'Sign Up'}\r\n      </Button>\r\n    </Col>\r\n    <Col span={8} style={{margin:'0 auto'}}>\r\n    {elemName === 'Sign Up' ? <Signup/> : <Login/>}\r\n    </Col>\r\n    <br/>\r\n  </Row>\r\n}\r\n\r\n\r\nexport default HomePage;","import React,{useState} from 'react'\r\nimport {Button,Modal,Image} from 'antd'\r\n\r\n\r\n\r\nconst  ModalOpener:React.FC<{receiptImage:any,id:string}> = ({id}) => {\r\n\r\n  const [isModalVisible,setIsModalVisible] = useState<boolean>(false);\r\n\r\n  const showModal = (e:React.MouseEvent<HTMLButtonElement>):void => {\r\n    setIsModalVisible(true);\r\n  }\r\n\r\n  const handleOk = ():void => {\r\n    setIsModalVisible(false);\r\n  }\r\n\r\n  const handleCancel = ():void => {\r\n    setIsModalVisible(false);\r\n  }\r\n\r\n  return <>\r\n    <Button type=\"primary\" onClick={showModal}>View receipt</Button>\r\n    <Modal title=\"Receipt Image\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n      <Image \r\n        src={`remitance/receipt_image/${id}`}\r\n        alt=\"receipt image\"\r\n      />\r\n    </Modal>\r\n  </>\r\n} \r\n\r\n\r\nexport default ModalOpener","import React from 'react'\r\nimport type { ColumnsType } from 'antd/lib/table';\r\nimport ModalOpener from './modal'\r\nimport {RemitanceHistoryInterface} from '../types/type'\r\n\r\ninterface mydatatype {\r\n  key:string | number;\r\n  totalPound:number;\r\n  totalTaka:number;\r\n  sending_date:Date | string;\r\n  exchange_rate:number;\r\n  receipt_image:string;\r\n  paying_agent:string;\r\n  govt_reward?:number\r\n}\r\n\r\nexport const columnsTwoInterface:ColumnsType<RemitanceHistoryInterface>= [\r\n  {\r\n    title:'TOTAL POUND',\r\n    dataIndex:'totalPound',\r\n    key:'TOTAL POUND'\r\n  },\r\n  {\r\n    title:'TOTAL TAKA',\r\n    dataIndex:'totalTaka',\r\n    key:'TOTAL TAKA'\r\n  },\r\n  {\r\n    title:'EXCHANGE RATE',\r\n    dataIndex:'exchangeRate',\r\n    key:'EXCHANGE RATE'\r\n  },\r\n  {\r\n    title:'SENDING DATE',\r\n    dataIndex:'sendingDate',\r\n    key:'SENDING DATA'\r\n  },\r\n  {\r\n    title:'CURRENT VALUE',\r\n    dataIndex:'todayAmount',\r\n    key:'CURRENT TOTAL TAKA'\r\n  },\r\n  {\r\n    title:'CURRENT RATE',\r\n    dataIndex:'todayRate',\r\n    key:'CURRENT RATE'\r\n  },\r\n  {\r\n    title:'PAYING AGENT',\r\n    dataIndex:'payingAgent',\r\n    key:'PAYING AGENT'\r\n  },\r\n  {\r\n    title:'GOVT REWARD',\r\n    dataIndex:'govtIncentive',\r\n    key:'GOVT REWARD'\r\n  },\r\n  {\r\n    title:'RECEIPT IMAGE',\r\n    dataIndex:'receiptImage',\r\n    key:'RECIPT IMAGE',\r\n    render: (_, {receiptImage,key:id}) => {\r\n      id = typeof id === 'string' ? id : '';\r\n      return <ModalOpener id={id} receiptImage={receiptImage}/>\r\n    }\r\n  }\r\n]\r\n\r\n\r\nexport const data:mydatatype[] = [\r\n  {\r\n    key:1,\r\n    totalPound : 693.07,\r\n    totalTaka:82891,\r\n    sending_date:new Date('2022-06-30').toDateString(),\r\n    exchange_rate:119.6000,\r\n    receipt_image:'image_1',\r\n    paying_agent:'Any bank',\r\n    govt_reward: 2000,\r\n  },\r\n  {\r\n    key:2,\r\n    totalPound : 320.07,\r\n    totalTaka:56076,\r\n    sending_date:new Date('2022-05-30').toDateString(),\r\n    exchange_rate:116.6000,\r\n    receipt_image:'image_2',\r\n    paying_agent:'Any bank',\r\n    govt_reward: 1000,\r\n  },\r\n  {\r\n    key:3,\r\n    totalPound : 520.07,\r\n    totalTaka:66076,\r\n    sending_date:new Date('2022-04-30').toDateString(),\r\n    exchange_rate:115.6000,\r\n    receipt_image:'image_3',\r\n    paying_agent:'Any bank',\r\n    govt_reward: 1500,\r\n  },\r\n  {\r\n    key:4,\r\n    totalPound : 400.07,\r\n    totalTaka:44076,\r\n    sending_date:new Date('2022-04-30').toDateString(),\r\n    exchange_rate:114.6000,\r\n    receipt_image:'image_4',\r\n    paying_agent:'Any bank',\r\n    govt_reward: 1200,\r\n  }\r\n];","import React,{useContext} from 'react'\r\nimport { Row,Col,Button,Space } from 'antd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DataContext from '../context/context';\r\nimport { contextInterface } from '../types/type';\r\n\r\nconst Navbar:React.FC = () =>  {\r\n  \r\n  const navigate = useNavigate();\r\n  const {user,logoutHandler}:contextInterface = useContext(DataContext); \r\n  // const homeRoute:string = user.fullname ? '/history' : '/';\r\n  const username = user.fullname ? user.fullname : 'John Doe';\r\n  const btnTexts:{btnOneText:string;btnTwoText:string} = user.fullname ? {btnOneText:'Logout', btnTwoText:'Add Remitance'} : {btnOneText:'Login',btnTwoText:'Home'};\r\n\r\n  const buttonOnclickHandler = () => {\r\n    if(user.fullname) {\r\n      logoutHandler();\r\n      return;\r\n    }\r\n    navigate('/');\r\n  }\r\n\r\n  return  <Row style={{width:'100%',backgroundColor:'black', marginBottom:'15px'}}>\r\n    <Col span={20} style={{padding:'5px 0 5px 20px'}}>\r\n      <Button \r\n        type='text' \r\n        style={{color:'#fff',fontSize:'2rem'}} \r\n        onClick={() => navigate(user.fullname ? '/history' : '/')}\r\n      >\r\n        Welcome {username}\r\n      </Button>\r\n    </Col>\r\n    <Col span={4} style={{padding:'20px 0'}}>\r\n        <Space>\r\n          <Button type='primary' onClick={buttonOnclickHandler}>{btnTexts.btnOneText}</Button>\r\n          <Button \r\n            type='primary'\r\n            onClick={() => navigate(user.fullname ? '/add_remitance' : '/')}\r\n          >\r\n            {btnTexts.btnTwoText}\r\n          </Button>\r\n        </Space>\r\n      </Col>\r\n  </Row>\r\n}\r\n\r\nexport default Navbar;","import React,{useContext} from 'react';\r\nimport {Row,Col,Table,Typography} from 'antd'\r\nimport {columnsTwoInterface} from './dataSource'\r\nimport DataContext from '../context/context';\r\nimport { contextInterface } from '../types/type';\r\nimport Navbar from './navigation';\r\n\r\nconst Title = Typography.Title;\r\n\r\nconst DataModel:React.FC = () => {\r\n  const {remitance_history,totalAmount:{originalAmount,currentAmount}}:contextInterface = useContext(DataContext);\r\n  return <>\r\n    <Navbar/>\r\n    <Title level={1} style={{textAlign:'center',fontSize:'2.5rem'}}>\r\n      Total amount is = {originalAmount} & current value would be = {currentAmount} \r\n    </Title>\r\n    <Row style={{width:'100%', marginTop:'25px'}} justify=\"center\">\r\n      <Col span={24}>\r\n        <Table bordered={true} pagination={false} key='hello' dataSource={remitance_history} columns={columnsTwoInterface} size=\"large\" />;\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\n\r\n\r\nexport default DataModel;","import React,{useContext,useState} from 'react'\r\nimport { Form,Row,Col,Typography,Input, Upload,Button,Alert} from 'antd'\r\nimport {UploadOutlined } from '@ant-design/icons'\r\nimport DataContext from '../context/context'\r\nimport { contextInterface,RemitanceHistoryInterface,AlertType } from '../types/type'\r\nimport { numberConverter } from '../utils/utils'\r\nimport Navbar from './navigation'\r\n\r\nconst {Title} = Typography;\r\n\r\nconst normFile:any = (e: any) => {\r\n  if (Array.isArray(e)) {\r\n    return e;\r\n  }\r\n  return e.fileList ? e.fileList : '';\r\n};\r\n\r\nconst AddRmitanceHistory:React.FC = () => {\r\n  const [form] = Form.useForm();\r\n  const {add_remitance_history}:contextInterface = useContext(DataContext); \r\n  const [dataUploadError,setDataUploadError] = useState<{message:string,type:AlertType}>({message:'', type:undefined});\r\n  const [shouldButtonSpin,setLoadingState] = useState<boolean>(false);\r\n  \r\n  const onFinishHandler = async (credentials:RemitanceHistoryInterface):Promise<void> => {\r\n    numberConverter(credentials);\r\n    setLoadingState(true);\r\n    await add_remitance_history(credentials,setDataUploadError);\r\n    setLoadingState(false);\r\n  }\r\n\r\n  return <>\r\n    <Navbar/>\r\n    <Row style={{height:'100vh'}} justify=\"space-between\" align='middle'>\r\n      <Col span={12}>\r\n        <div style={{width:'50%', margin:'0 auto 15px auto'}}>\r\n          <img\r\n            src={'/picture.jpg'}\r\n            alt=\"type the data\"\r\n            style={{display:'block',width:'100%',height:'400px'}}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Title level={1} style={{textAlign:'center',letterSpacing:'1.3px'}}>\r\n            ADD AN REMITANCE\r\n          </Title>\r\n        </div>\r\n      </Col>\r\n      <Col \r\n        span={12} \r\n        style={{margin:'0 auto'}}\r\n      >\r\n        <Form\r\n          form={form}\r\n          layout=\"vertical\"\r\n          size=\"middle\"\r\n          name=\"basic\"\r\n          labelCol={{span:8}}\r\n          wrapperCol={{span:20}}\r\n          initialValues={{remember:true}}\r\n          autoComplete=\"off\"\r\n          onFinish={onFinishHandler}\r\n        >\r\n          <Form.Item \r\n            label=\"Pin Number\" \r\n            name=\"pinNumber\" \r\n            rules={[{required:true,message:'You have to provide the pin number with a length of >= 5',min:5}]}\r\n          > \r\n            <Input type='number'/>\r\n          </Form.Item>\r\n\r\n          <Form.Item \r\n            label=\"Total Pound\" \r\n            name=\"totalPound\" \r\n            rules={[{required:true,message:'Pleae set a total pound'}]}\r\n          > \r\n            <Input type='number'/>\r\n          </Form.Item>\r\n\r\n          <Form.Item \r\n            label=\"Total Taka\" \r\n            name=\"totalTaka\" \r\n            rules={[{required:true,message:'Pleae set a total taka'}]}\r\n          > \r\n            <Input type='number'/>\r\n          </Form.Item>\r\n\r\n          <Form.Item \r\n            label=\"Exchange Rate\" \r\n            name=\"exchangeRate\" \r\n            rules={[{required:true,message:'There must be an exchange rate'}]}\r\n          > \r\n            <Input type='number'/>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Sending date\"\r\n            name=\"sendingDate\"\r\n            rules={[\r\n              {required:true, message:'Please set the valid sending date'},\r\n              () => ({\r\n                validator(_, value) {\r\n                  if (!value || value.match(/^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/) !== null) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(new Error('Please provide a date with YYYY-MM-DD format'));\r\n                },\r\n              })\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item \r\n            label=\"Paying Agent\" \r\n            name=\"payingAgent\" \r\n            rules={[{required:true,message:'The should be an paying agent'}]}\r\n          > \r\n            <Input/>\r\n          </Form.Item>\r\n\r\n          <Form.Item \r\n            label=\"Govt Incentive\" \r\n            name=\"govtIncentive\" \r\n          > \r\n            <Input/>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"receiptImage\"\r\n            label=\"Upload receipt image\"\r\n            valuePropName=\"fileList\"\r\n            rules={[{required:true,message:'please select the receipt image'}]}\r\n            getValueFromEvent={normFile}\r\n            extra=\"upload an jpg or png file\"\r\n            \r\n          >\r\n            <Upload \r\n              name=\"logo\" \r\n              customRequest={() => {\r\n                // console.log('do this');\r\n              }} \r\n              showUploadList={false}\r\n            >\r\n              <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n            </Upload>\r\n          </Form.Item>\r\n\r\n          {dataUploadError.message && <Form.Item>\r\n              <Alert message={dataUploadError.message} type={dataUploadError.type} showIcon/>\r\n            </Form.Item> \r\n          }\r\n          \r\n          <Form.Item\r\n          >\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={shouldButtonSpin}>\r\n              Add Remitance\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\n\r\nexport default AddRmitanceHistory;","import React from 'react'\r\nimport { Result } from 'antd';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst InvalidRoute:React.FC = () => {\r\n  return <Result\r\n    status=\"404\"\r\n    title=\"404\"\r\n    subTitle=\"Sorry, the page you visited does not exist.\"\r\n    extra={<Link to=\"/\">Back Home</Link>}\r\n  />\r\n}\r\n\r\n\r\nexport default InvalidRoute;","import React from \"react\";\r\nimport {Routes, Route, } from 'react-router-dom';\r\nimport ContextParent from \"../context/contextParent\";\r\nimport HomePage from \"./home\";\r\nimport DataModel from \"./dataModel\";\r\nimport AddRmitanceHistory from \"./addRemitanceHistory\";\r\nimport InvalidRoute from \"./invalidRoute\";\r\n\r\nconst RouteContainer:React.FC = () => {\r\n  return <>\r\n    <Routes>\r\n      <Route path=\"/\" element={<HomePage/>}/>\r\n      <Route path=\"/history\" element={<DataModel/>}/>\r\n      <Route path=\"/add_remitance\" element={<AddRmitanceHistory/>}/>\r\n      <Route path=\"*\" element={<InvalidRoute/>}/>\r\n    </Routes>\r\n  </>\r\n}\r\n\r\nconst MainComponent:React.FC = () => {\r\n  return <ContextParent>\r\n    <RouteContainer/>\r\n  </ContextParent>\r\n}\r\n\r\n\r\nexport default MainComponent;","import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport MainComponent from \"./remitance-app/component/main\";\r\n\r\nconst App:React.FC = () => {\r\n \r\n return <BrowserRouter>\r\n    <MainComponent/>\r\n  </BrowserRouter>\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\n\r\nconst container = document.getElementById('root') as HTMLElement;\r\nconst root = ReactDOM.createRoot(container);\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}